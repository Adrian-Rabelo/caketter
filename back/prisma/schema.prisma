generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator docs {
  provider = "node node_modules/prisma-docs-generator"
  output   = "../../docs"
}

model User {
  id         Int       @id @default(autoincrement())
  uuid       String    @unique @default(uuid())
  name       String
  email      String    @unique
  login      String    @unique
  password   String
  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt()

  costumer Costumer[]
  cake     Cake[]
  order    Order[]

  @@map("user")
}

model Costumer {
  id         Int       @id @default(autoincrement())
  name       String
  contact    String
  email      String?
  address    String?
  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt

  Order   Order[]
  user    User    @relation(fields: [user_uuid], references: [uuid])
  user_uuid String

  @@map("costumer")
}

model Cake {
  id         Int       @id @default(autoincrement())
  dough      String
  filling    String
  size       Float
  theme      String
  name_top   String?
  age_top    String?
  Order      Order[]
  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt

  user    User    @relation(fields: [user_uuid], references: [uuid])
  user_uuid String

  @@map("cake")
}

model Order {
  id            Int       @id @default(autoincrement())
  costumer      Costumer  @relation(fields: [id_costumer], references: [id])
  id_costumer   Int
  cake          Cake      @relation(fields: [id_cake], references: [id])
  id_cake       Int
  price         Float
  delivery_date DateTime
  created_at    DateTime  @default(now())
  updated_at    DateTime? @updatedAt

  user    User    @relation(fields: [user_uuid], references: [uuid])
  user_uuid String

  @@map("order")
}
